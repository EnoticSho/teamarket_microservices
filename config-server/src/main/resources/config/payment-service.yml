server:
  port: 7777
  servlet:
    context-path: /payment

spring:
  application:
    name: payment-service
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        ddl-auto: validate

---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: org.postgresql.Driver
    password: root
    username: root
    url: jdbc:postgresql://localhost:5432/database
  kafka:
    bootstrap-servers: http://localhost:9092
    template:
      default-topic: paymentRequestTopic
    consumer:
      group-id: paymentId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: paymentRequestTopic:com.example.teamarket.payment.dto.request.PaymentRequest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: paymentInfoTopic:com.example.teamarket.payment.dto.response.PaymentInfoDto

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

---

spring:
  config:
    activate:
      on-profile: docker
  datasource:
    driver-class-name: org.postgresql.Driver
    password: root
    username: root
    url: jdbc:postgresql://postgres:5432/database
  kafka:
    bootstrap-servers: http://broker:9092
    template:
      default-topic: paymentRequestTopic
    consumer:
      group-id: paymentId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: paymentRequestTopic:com.example.teamarket.payment.dto.request.PaymentRequest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: paymentInfoTopic:com.example.teamarket.payment.dto.response.PaymentInfoDto
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

